TOOL := xcelium
SIM  := 1

LINT_DIR  := $(RESULTS_DIR)/$(TB).$(CFG).$(TAG).lint
BUILD_DIR := $(RESULTS_DIR)/$(TB).$(CFG).$(TAG).build
SIM_DIR   := $(RESULTS_DIR)/$(TB).$(CFG).$(TAG).sim.$(SUITE).$(PROG)
COV_DIR   := $(RESULTS_DIR)/$(TB).$(CFG).$(TAG).cov
$(TOUCH_DIR) $(RESULTS_DIR) $(LOG_DIR) $(REPORT_DIR) $(LINT_DIR) $(BUILD_DIR) $(SIM_DIR) $(COV_DIR):
	$(MKDIR) $@

include $(TB_PATH)/$(TB)/Makefile.xcelium

## Tool specific options
LINT_XMSIM_OPTIONS = +lint=all,noSVA-UA,noSVA-NSVU,noNS,noVCDE

XMSIM_OPTIONS += -64BIT
XMSIM_OPTIONS += testbench
XMSIM_OPTIONS += +libext+.v+.vlib+.vh       # Find library files with these extensions
XMSIM_OPTIONS += -SV_ROOT $(BP_RTL_INSTALL_DIR)/lib -SV_LIB libdramsim3
XMSIM_OPTIONS += -SV_ROOT $(BP_TOOLS_INSTALL_DIR)/lib -SV_LIB libdromajo_cosim

XRUN_BUILD_OPTS  = -64bit # Compile a 64-bit executable
XRUN_BUILD_OPTS += -sv # Enable SystemVerilog
XRUN_BUILD_OPTS += -assert # Enable elaboration system tasks
XRUN_BUILD_OPTS += -timescale 1ps/1ps  # Set timescale
XRUN_BUILD_OPTS += -elaborate -notimingchecks
XRUN_BUILD_OPTS += "-Wcxx,-std=c++17"
XRUN_BUILD_OPTS += "-I$(BP_TOOLS_DIR)/dromajo/include "
XRUN_BUILD_OPTS += "-I$(BP_TOOLS_INSTALL_DIR)/include -I $(BASEJUMP_STL_DIR)/bsg_$(TEST) "
#XRUN_BUILD_OPTS += "-L$(BP_RTL_INSTALL_DIR)/lib -ldramsim3 -Wl,-rpath=$(BP_RTL_INSTALL_DIR)/lib,-Wl"
ifeq ($(SPIKE),1)
XRUN_BUILD_OPTS += "-DSPIKE_COSIM"
else
XRUN_BUILD_OPTS += -CFLAGS \"$(BP_TOOLS_INSTALL_DIR)/lib/libdromajo_cosim.a\"
XRUN_BUILD_OPTS += "-DDROMAJO_COSIM"
endif
XRUN_BUILD_OPTS += -top testbench
XRUN_BUILD_OPTS += -f flist.vcs

XMSIM_PLUSARGS  =

lint.xcelium: $(LINT_DIR)/lintx
lint.xcelium: LINT_LOG     := $(LOG_DIR)/$(TB).$(CFG).$(TAG).lint.log
lint.xcelium: LINT_REPORT  := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).lint.rpt
lint.xcelium: LINT_ERROR   := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).lint.err
$(LINT_COLLATERAL): | $(TOUCH_DIR) $(RESULTS_DIR) $(LOG_DIR) $(REPORT_DIR) $(LINT_DIR)
$(LINT_DIR)/lintx: | $(LINT_COLLATERAL)
	$(CD) $(@D); \
		$(XRUN) $(XRUN_BUILD_OPTS) $(LINT_XMSIM_OPTIONS) $(subst pvalue+,defparam testbench.,$(HDL_PARAMS)) $(HDL_DEFINES) 2>&1 | $(TEE) -i $(LINT_LOG)
	-@$(GREP) -A5 "Lint" $(LINT_LOG) > $(LINT_REPORT)

build.xcelium: $(BUILD_DIR)/xcelium.d
build.xcelium: BUILD_LOG    := $(LOG_DIR)/$(TB).$(CFG).$(TAG).build.log
build.xcelium: BUILD_REPORT := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).build.rpt
build.xcelium: BUILD_ERROR  := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).build.err
$(BUILD_COLLATERAL): | $(TOUCH_DIR) $(RESULTS_DIR) $(LOG_DIR) $(REPORT_DIR) $(BUILD_DIR)
$(BUILD_DIR)/xcelium.d: | $(BUILD_COLLATERAL)
	$(CD) $(@D); \
		$(XRUN) $(XRUN_BUILD_OPTS) $(subst pvalue+,defparam testbench.,$(HDL_PARAMS)) $(HDL_DEFINES) 2>&1 | $(TEE) -i $(BUILD_LOG)
	-@$(GREP) "Error" -A5 $(BUILD_LOG) > $(BUILD_ERROR)
	-@$(TAIL) -n3 $(BUILD_LOG) > $(BUILD_REPORT)
	-@$(TEST) -s $(BUILD_ERROR) && $(ECHO) "FAILED" >> $(BUILD_REPORT) || rm $(BUILD_ERROR)

build_dump.xcelium: XRUN_BUILD_OPTS += -access rc
build_dump.xcelium: build.xcelium

build_cov.xcelium: build.xcelium
	$(error Coverage is currently unsupported for xcelium)

$(SIM_DIR)/xcelium.d: $(BUILD_DIR)/xcelium.d
	@$(SYMLINK) $(<D)/$(@F) $@

sim.xcelium: build.xcelium
sim.xcelium: $(SIM_DIR)/run_simx
sim.xcelium: SIM_LOG    := $(LOG_DIR)/$(TB).$(CFG).$(TAG).sim.$(SUITE).$(PROG).log
sim.xcelium: SIM_REPORT := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).sim.$(SUITE).$(PROG).rpt
sim.xcelium: SIM_ERROR  := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).sim.$(SUITE).$(PROG).err
$(SIM_COLLATERAL): | $(TOUCH_DIR) $(RESULTS_DIR) $(LOG_DIR) $(REPORT_DIR) $(SIM_DIR)
$(SIM_DIR)/run_simx: | $(SIM_COLLATERAL)
	$(CD) $(@D); $(XMSIM) $(XMSIM_OPTIONS) $(XMSIM_PLUSARGS) 2>&1 | $(TEE) -i $(SIM_LOG)
	-@$(GREP) "FAIL" $(SIM_LOG) && $(ECHO) "FAILED" > $(SIM_ERROR)
	-@$(GREP) "PASS" $(SIM_LOG) || $(ECHO) "FAILED" > $(SIM_ERROR)
	-@$(GREP) "Simulation complete via $$finish" $(SIM_LOG) || $(ECHO) "FAILED" > $(SIM_ERROR)
	-@$(GREP) "STATS" -A 3 $(SIM_LOG) > $(SIM_REPORT)

sim_dump.xcelium: XMSIM_OPTIONS += -input $(TB_PATH)/$(TB)/xcelium_dump.tcl
sim_dump.xcelium: sim.xcelium

sim_cov.xcelium: sim.xcelium
	$(error Coverage is currently unsupported for xcelium)

cov.xcelium: $(COV_DIR)/covv
cov.xcelium: COV_LOG     := $(LOG_DIR)/$(TB).$(CFG).$(TAG).cov.log
cov.xcelium: COV_REPORT  := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).cov
cov.xcelium: COV_HREPORT := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).cov.hier.rpt
cov.xcelium: COV_TREPORT := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).cov.test.rpt
cov.xcelium: COV_ERROR   := $(REPORT_DIR)/$(TB).$(CFG).$(TAG).cov.err
$(COV_COLLATERAL): | $(TOUCH_DIR) $(RESULTS_DIR) $(LOG_DIR) $(REPORT_DIR) $(COV_DIR)
$(COV_DIR)/cov.xcelium: | $(COV_COLLATERAL)
	$(error Coverage is currently unsupported for xcelium)

wave.xcelium: $(SIM_DIR)/wavex
$(SIM_DIR)/wavex: $(SIM_DIR)/dump.shm
	$(SIMVISION) -64BIT $< &


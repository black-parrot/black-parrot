## Tools
CC ?= $(GCC)
VV ?= $(VERILATOR)

## Tool options
VV_OPTS  = --sc                 # Output in SystemC rather than C++
VV_OPTS += -Wno-unoptflat       # Verilator has problems with false positive combinatorial
                                #   loop detection e.g. bit 0 drives bit 1 of struct
#VV_OPTS += --debug --gdbbt     # Debugs and produces stack trace
VV_OPTS += -O1

#OPT_FAST += -O1 -fstrict-aliasing # Fastest compile time options

LINT_OPTS  := --lint-only
BUILD_OPTS := --Wno-fatal --Wno-lint --Wno-style --Wno-widthconcat --exe -CFLAGS -std=c++11 -I$(BP_EXTERNAL_DIR)/share/verilator/include/vltstd/ -LDFLAGS "-L$(BP_EXTERNAL_DIR)/lib -ldramsim -Wl,-rpath=$(BP_EXTERNAL_DIR)/lib"

TOP_MODULE ?= testbench

PROG     ?= rv64ui-p-simple
COVERAGE ?= 0
DUMP     ?= 0

ifeq ($(DUMP), 1)
  VV_OPTS += --trace         # Dump a VCD
  VV_OPTS += --trace-structs # Dump struct information with VCD
  VV_OPTS += --trace-depth 10
endif

ifeq ($(COVERAGE), 1)
  VV_OPTS += --coverage-line
  VV_OPTS += --coverage-toggle
  COVERAGE_DAT ?= $(PROG)_coverage.dat
endif

.PHONY: deps.sc lint.sc build.sc run.sc clean.sc

VERILATOR_RUN_DIR ?= $(SYN_PATH)/run_verilator

deps.sc:
	$(eval include $(TB_PATH)/$(TB)/Makefile.frag)
	$(eval LOG_DIR := $(LOG_PATH)/verilator)
	$(eval REPORT_DIR := $(REPORT_PATH)/verilator)
	$(shell mkdir -p $(REPORT_DIR))
	$(shell mkdir -p $(LOG_DIR)/regress)
	$(shell mkdir -p $(VERILATOR_RUN_DIR))
	@cp $(MEM_PATH)/$(PROG).mem $(VERILATOR_RUN_DIR)/prog.mem || true
	# TODO: Should set the dram parameters through the makefile flow
	@cp $(BP_COMMON_DIR)/test/cfg/DDR2_micron_16M_8b_x8_sg3E.ini $(VERILATOR_RUN_DIR) || true
	@cp $(BP_COMMON_DIR)/test/cfg/system.ini $(VERILATOR_RUN_DIR)/system.ini || true
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/testbench.v > $(VERILATOR_RUN_DIR)/testbench.v || true
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/wrapper.v > $(VERILATOR_RUN_DIR)/wrapper.v || true
	@touch $(VERILATOR_RUN_DIR)/flist.verilator
	@grep -v -e "^\/\/" $(SYN_PATH)/flist.verilator > $(VERILATOR_RUN_DIR)/flist.verilator || true
	@grep -v -e "^\/\/" $(TB_PATH)/$(TB)/flist.verilator >> $(VERILATOR_RUN_DIR)/flist.verilator || true
	@echo '$(VERILATOR_RUN_DIR)/wrapper.v'             >> $(VERILATOR_RUN_DIR)/flist.verilator || true
	@echo '$(VERILATOR_RUN_DIR)/testbench.v'           >> $(VERILATOR_RUN_DIR)/flist.verilator || true
	@cat $(SYN_PATH)/coverage_hier.verilator | envsubst > $(VERILATOR_RUN_DIR)/config.vlt || true
	@touch $(VERILATOR_RUN_DIR)/config.vlt 

lint.sc: LINT_LOG ?= $(TB)_lint.log
lint.sc: deps.sc
	cd $(VERILATOR_RUN_DIR); \
	$(VV) $(VV_OPTS) $(LINT_OPTS) --top-module $(TOP_MODULE) \
		-f flist.verilator \
		$(HDL_PARAMS) $(TB_PATH)/$(TB)/test_bp.cpp \
	| tee $(LOG_DIR)/$(LINT_LOG)

verilate.sc: VBUILD_LOG ?= $(TB)_vbuild.log
verilate.sc: deps.sc
	cd $(VERILATOR_RUN_DIR); \
	rm -rf obj_dir; \
	$(VV) $(VV_OPTS) $(BUILD_OPTS) --top-module $(TOP_MODULE) \
		config.vlt -f flist.verilator \
		$(HDL_PARAMS) $(TB_PATH)/$(TB)/test_bp.cpp \
		| tee $(LOG_DIR)/$(VBUILD_LOG)

build.sc: CBUILD_LOG ?= $(TB)_cbuild.log
build.sc: deps.sc verilate.sc
	cd $(VERILATOR_RUN_DIR); \
	$(MAKE) -C obj_dir -f V$(TOP_MODULE).mk \
	| tee $(LOG_DIR)/$(CBUILD_LOG)

run.sc: SIM_LOG ?= $(TB)_$(PROG)_sim.log
run.sc: deps.sc 
	cd $(VERILATOR_RUN_DIR); \
	$(VERILATOR_RUN_DIR)/obj_dir/V$(TOP_MODULE) $(COVERAGE_DAT) \
	| tee $(LOG_DIR)/$(SIM_LOG)

cov.sc: COVERAGE = 1
cov.sc: deps.sc regress.sc
	cd $(VERILATOR_RUN_DIR); \
	verilator_coverage *_coverage.dat --annotate $(REPORT_DIR)/coverage \
		--write $(REPORT_DIR)/coverage/total_coverage.dat --rank \
	| tee $(REPORT_DIR)/$(TB)_cov.rpt

regress.sc: build.sc $(RV64_REGRESSION_SC)
$(RV64_REGRESSION_SC): 
	@cp $(MEM_PATH)/$(PROG).mem $(VERILATOR_RUN_DIR)/prog.mem
	$(MAKE) run.sc PROG=$(basename $@) \
		SIM_LOG=regress/$(TB)_$(basename $@)_sim.log || true
		@echo $(basename $@) >> $(REPORT_DIR)/regress_stats.rpt
		@grep "PASS" $(LOG_DIR)/regress/$(TB)_$(basename $@)_sim.log \
		| tee -a $(REPORT_DIR)/regress_stats.rpt || true
		@grep "PASS" $(LOG_DIR)/regress/$(TB)_$(basename $@)_sim.log \
		|| echo "$(basename $@): FAILED" >> $(REPORT_DIR)/regress_fails.err

dve.sc: deps.sc
	cd $(VERILATOR_RUN_DIR); \
	dve -full64 -vpd vcdplus.vpd &

clean.sc:
	rm -rf $(VERILATOR_RUN_DIR)


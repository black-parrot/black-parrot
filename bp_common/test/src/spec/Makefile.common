PROG_NAME := $(BENCHMARK)
SPEC_DIR = $(TEST_DIR)/src/spec
BENCHMARK_DIR = $(SPEC_DIR)/spec2000/benchmarks/spec2000/CINT2000/$(BENCHMARK)
OBJECT_FILES := $(BENCHMARK_OBJS)
IN_FILES := $(BENCHMARK_INPS)

CLEAN_ITEMS += $(BENCHMARK).riscv

vpath %.c $(BENCHMARK_DIR)/src.raw
vpath %.h $(BENCHMARK_DIR)/src.raw
vpath %.c ./rawlib

RISCV_GCC  = $(CROSS_COMPILE)gcc
RISCV_GCC_OPTS = -mabi=lp64 -march=rv64ia -mcmodel=medany -mstrict-align -static -nostartfiles -I$(TEST_DIR)/include
RISCV_GCC_EXTRA_OPTS = -Irawlib $(BENCHMARK_DEFS)

RISCV_LINK = $(RISCV_GCC) -t -T $(SPEC_DIR)/riscv.ld
RISCV_LINK_OPTS = -nostartfiles -lperch -lm -L$(TEST_DIR)/lib

MKLFS = dramfs_mklfs

all: lfs $(PROG_NAME).riscv

lfs: $(IN_FILES)
	$(MKLFS) $(LFS_BLOCK_SIZE) $(LFS_BLOCK_COUNT) $(IN_FILES) > lfs.c
	$(RISCV_GCC) $(RISCV_GCC_OPTS) -c lfs.c -o lfs.o

%.o: %.c
	$(RISCV_GCC) $(RISCV_GCC_OPTS) $(RISCV_GCC_EXTRA_OPTS) -c $< -o $@

$(PROG_NAME).riscv: $(OBJECT_FILES)
	$(RISCV_LINK) $(OBJECT_FILES) -L. -o $@ $(RISCV_LINK_OPTS)

clean:
	rm -rf $(CLEAN_ITEMS) 


%/wrapper.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@
	@sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@

%/testbench.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@
	@sed -i 's/BP_DRAM_FLOWVAR/"$(DRAM)"/g' $@

%/flist.vcs:
	@grep -v -e "^\#" $(SYN_PATH)/flist.vcs      >> $@
	@grep -v -e "^\#" $(TB_PATH)/$(TB)/flist.vcs >> $@
	@sed -i "s#.*bp_common_pkg.sv#$(BP_COMMON_DIR)/test/common/bp_common_test_pkg.sv#g" $@
	@echo wrapper.sv                             >> $@
	@echo testbench.sv                           >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_reset_gen.sv" >> $@
	@echo "$(BASEJUMP_STL_DIR)/bsg_test/bsg_nonsynth_clock_gen.sv" >> $@

CCE_UCODE_FILE ?= $(BP_SDK_UCODE_DIR)/$(CCE_MEM)
%/cce_ucode.mem: $(CCE_UCODE_FILE)
	$(CP) $< $@

%/test.tr:
	$(PYTHON) $(TB_PATH)/$(TB)/me_test.py --out-dir $(@D) --out-file test -n $(NUM_INSTR_P) \
		-l $(NUM_LCE_P) --seed $(SEED_P) --lce-mode $(LCE_MODE_P) --cce-mode $(CCE_MODE_P) \
		--test $(ME_TEST_P) --test-ways $(TEST_WAYS_P) --test-sets $(TEST_SETS_P) $(ME_DEBUG_FLAG) \
		--in-dir $(TB_PATH)/$(TB) --in-file $(TRACE_FILE_P) $(AXE_FLAG)
	$(TOUCH) $(@D)/$(ME_TEST_P)_s$(SEED_P)_l$(NUM_LCE_P)_n$(NUM_INSTR_P)_m$(LCE_MODE_P)$(CCE_MODE_P).touch


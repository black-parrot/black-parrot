/*
 * inst.txt
 *
 * @author markw
 *
 * This file defines CCE microcode syntax
 *
 */

# Arithmetic
add <src_a> <src_b> <dst>
sub <src_a> <src_b> <dst>
inc <gpr>
dec <gpr>
lsh <gpr> <imm>
rsh <gpr> <imm>
and <src_a> <src_b> <dst>
or  <src_a> <src_b> <dst>
xor <src_a> <src_b> <dst>
neg <gpr>


<gpr>             =   r0, r1, r2, r3
<src_a>, <src_b>  =   <gpr>
<dst>             =   <gpr>

# Branch
bi                  <target>

beq <src_a> <src_b> <target>
bne <src_a> <src_b> <target>

bz  <src_a>         <target>
bnz <src_a>         <target>

bf  <flag>          <target>
bfz <flag>          <target>

bqr <queue>         <target>

blt <src_a> <src_b> <target>
ble <src_a> <src_b> <target>
bgt <src_a> <src_b> <target>
bge <src_a> <src_b> <target>

<src_a>  = <gpr>, 0, 1, reqLce, ackType, shR0
<src_b>  = <gpr>, 0, 1, reqLce, ackType, shR0
<flag>   = rqf, nerf, ldf, nwbf, tf, rf, rwbf, pf, uf, if, ef, pcf
<queue>  = lceReq, memResp, MemDataResp, pending, lceResp, lceDataResp
<target> = label, const_16

# Move
mov  <src> <dst>
movi <imm> <dst>

<src> = <gpr>, cce_id
<dst> = <gpr>, nextCohSt
<imm> = const_16

# Flag
sf  <flag>
sfz <flag>

# Read Directory
rdp <wg>
rdw <wg> <lce>
rde <wg> <lce> <way>

# Write Directory
wdp <wg> <const_1>
wde <wg> <lce> <way> <tag> <coh_st>
wds <wg> <lce> <way> <coh_st>

<wg>      = req, lru, <gpr>
<const_1> = 0, 1
<lce>     = req, tr, <gpr>
<way>     = req, lru, shWayR0, <gpr>
<tag>     = req, lru, 0
<coh_st>  = nextCohSt, <const_2>
<const_2> = 0/I, 1/S, 2/E, 3/M

# Misc
gad
clm # clear mshr
stall

# Queue
wfq   <src_q> [<srcq> ...]
pushq lceCmd <cmd> <lce> <addr> <way>
pushq memCmd <cmd> <mem_addr>
popq lceResp <gpr>
popq  <src_q>

<src_q> = lceReq, lceResp, lceDataResp, memResp, memDataResp, pending
<cmd> = const_3
<lce> = req, tr, <gpr>
<addr> = req, lru
<way> = req, tr, shWayR0, lru
<mem_addr> = req, lru


# Verilator specific test bench paths
SCTB_PATH = $(TB_PATH)/sc
TB_COMMON_PATH = $(TB_PATH)/common

## Tools
VV = $(VERILATOR_PATH)/bin/verilator
CC = g++

VV_OPTS +=-I$(SRC_PATH) -I$(BP_COMMON_PATH) -I$(BP_BE_PATH)/tb/rom -I$(CCE_ROM_PATH)
VV_OPTS +=-I$(NETWORK_PATH)
VV_OPTS +=-I$(BSG_IP_PATH)/bsg_dataflow -I$(BSG_IP_PATH)/bsg_mem -I$(BSG_IP_PATH)/bsg_misc
VV_OPTS +=-I$(BSG_IP_PATH)/bsg_noc
VV_OPTS +=-I$(INC_PATH)
VV_OPTS +=-I$(TB_COMMON_PATH)
VV_OPTS +=--trace -O3
VV_OPTS +=-Wno-unoptflat # Verilator has problems with false positive combinatorial
						 #	 loop detection e.g. bit 0 drives bit 1 of struct
VV_OPTS +=-Wno-width -Wno-unused

# These flags are passed to the C++ compiler used by Verilator
CPPFLAGS +=-I$(TB_PATH)/include -I$(BP_ME_PATH)/src/include/c

# Verilator specific sources (LINT only)
SCTB_SOURCE = \
	$(TB_COMMON_PATH)/bp_me_top.v   \
	$(TB_COMMON_PATH)/bp_mem.v			\
	$(CCE_ROM_PATH)/bp_me_mem_rom_0.v \
	$(BSG_IP_PATH)/bsg_noc/bsg_noc_pkg.v \
	$(NETWORK_PATH)/bp_coherence_network_channel.v \
	$(NETWORK_PATH)/bp_coherence_network.v \
	$(BSG_IP_PATH)/bsg_noc/bsg_mesh_router_buffered.v \
	$(BSG_IP_PATH)/bsg_noc/bsg_mesh_router.v

SC_TOP_MODULE = bp_me_top

## Export variables to subcommands
export

## Targets
cleansc: clean
	$(shell find $(SCTB_PATH) -regex '.*\(simsc\|simout\.txt\|dump\.vcd\)' | xargs rm -f)

lint.sc:
	$(eval HDL_SOURCE += $(CCE_ROM_PATH)/demo-v2/bp_cce_inst_rom_demo-v2_lce1_wg16_assoc8.v)
	$(VV) $(VV_OPTS) --lint-only $(HDL_SOURCE) $(SCTB_SOURCE) --top-module $(SC_TOP_MODULE)

# Makefile.frag is allowed to set TOP_MODULE, which allows multiple tests to target the same
# top module. If Makefile.frag does not set TOP_MODULE, it defaults to the target stem
%.sc: clean
	$(eval include $(SCTB_PATH)/$*/Makefile.frag)
	$(eval TOP_MODULE ?= $*)
	$(VV) $(VV_OPTS) --top-module $(TOP_MODULE) --sc $(HDL_SOURCE) $(HDL_PARAMS) \
		--exe $(SCTB_PATH)/$*/test_bp.cpp --trace-structs \
	&& make -C obj_dir -f V$(TOP_MODULE).mk \
	&& cp obj_dir/V$(TOP_MODULE) $(SCTB_PATH)/$*/simsc

%.runsc: %.sc
	$(eval include $(SCTB_PATH)/$*/Makefile.frag) \
	cd $(SCTB_PATH)/$* \
	&& ./simsc $(HDL_PARAMS) > $(SCTB_PATH)/$*/simout.txt

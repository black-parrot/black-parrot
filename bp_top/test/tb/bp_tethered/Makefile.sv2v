$(CONVERT_DIR)/flist.vcs:
	grep -v -e "^\#" $(SYN_PATH)/flist.vcs                                        > $@
	echo $(CONVERT_DIR)/wrapper.sv                                               >> $@
	echo "+incdir+$(BASEJUMP_STL_DIR)/hard/generic/bsg_mem/"                     >> $@
	echo "$(BASEJUMP_STL_DIR)/bsg_mem/bsg_mem_1rw_sync_banked.v"                 >> $@
	echo "$(BASEJUMP_STL_DIR)/bsg_mem/bsg_mem_1rw_sync_mask_write_bit_banked.v"  >> $@
	echo "$(BASEJUMP_STL_DIR)/bsg_mem/bsg_mem_1rw_sync_mask_write_byte_banked.v" >> $@
	sed -i "/bsg_mem_3r1w_sync.v/d"                                                 $@
	sed -i "/bsg_mem_2r1w_sync.v/d"                                                 $@
	sed -i "/bsg_mem_1r1w_sync.v/d"                                                 $@
	sed -i "/bsg_mem_1r1w_sync_mask_write_byte.v/d"                                 $@
	sed -i "/bsg_mem_1r1w_sync_mask_write_bit.v/d"                                  $@
	sed -i "/bsg_mem_1rw_sync.v/d"                                                  $@
	sed -i "/bsg_mem_1rw_sync_mask_write_byte.v/d"                                  $@
	sed -i "/bsg_mem_1rw_sync_mask_write_bit.v/d"                                   $@
	echo "$(CONVERT_DIR)/bsg_mem_3r1w_sync.v"                                    >> $@
	echo "$(CONVERT_DIR)/bsg_mem_2r1w_sync.v"                                    >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1r1w_sync.v"                                    >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1r1w_sync_mask_write_byte.v"                    >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1r1w_sync_mask_write_bit.v"                     >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1rw_sync.v"                                     >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1rw_sync_mask_write_byte.v"                     >> $@
	echo "$(CONVERT_DIR)/bsg_mem_1rw_sync_mask_write_bit.v"                      >> $@

$(CONVERT_DIR)/wrapper.sv:
	@sed "s/BP_CFG_FLOWVAR/$(CFG)/g" $(TB_PATH)/$(TB)/$(@F) > $@

$(CONVERT_DIR)/memgen.json:
	# Must be python2 or this will generate incorrect decimals
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1rw  0 > $(CONVERT_DIR)/bsg_mem_1rw_sync.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1rw  1 > $(CONVERT_DIR)/bsg_mem_1rw_sync_mask_write_bit.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1rw  8 > $(CONVERT_DIR)/bsg_mem_1rw_sync_mask_write_byte.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 2rw  0 > $(CONVERT_DIR)/bsg_mem_2rw_sync.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 2rw  1 > $(CONVERT_DIR)/bsg_mem_2rw_sync_mask_write_bit.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 2rw  8 > $(CONVERT_DIR)/bsg_mem_2rw_sync_mask_write_byte.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1r1w 0 > $(CONVERT_DIR)/bsg_mem_1r1w_sync.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1r1w 1 > $(CONVERT_DIR)/bsg_mem_1r1w_sync_mask_write_bit.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 1r1w 8 > $(CONVERT_DIR)/bsg_mem_1r1w_sync_mask_write_byte.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 2r1w 0 > $(CONVERT_DIR)/bsg_mem_2r1w_sync.v
	python2 $(BASEJUMP_STL_DIR)/hard/common/bsg_mem/bsg_mem_generator.py $(TB_PATH)/$(TB)/memgen.json 3r1w 0 > $(CONVERT_DIR)/bsg_mem_3r1w_sync.v
	cp $(TB_PATH)/$(TB)/$(@F) $@

CONVERT_COLLATERAL = $(addprefix $(CONVERT_DIR)/, flist.vcs wrapper.sv memgen.json)


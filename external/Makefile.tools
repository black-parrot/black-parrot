TOP ?= $(shell git rev-parse --show-toplevel)

include $(TOP)/Makefile.common

basejump_dir    := $(BP_EXTERNAL_DIR)/basejump_stl
systemc_dir     := $(BP_EXTERNAL_DIR)/systemc
verilator_dir   := $(BP_EXTERNAL_DIR)/verilator
gnu_dir         := $(BP_EXTERNAL_DIR)/riscv-gnu-toolchain
dtc_dir         := $(BP_EXTERNAL_DIR)/dtc
spike_dir       := $(BP_EXTERNAL_DIR)/riscv-isa-sim
dromajo_dir     := $(BP_EXTERNAL_DIR)/dromajo
axe_dir         := $(BP_EXTERNAL_DIR)/axe
dramsim2_dir    := $(BP_EXTERNAL_DIR)/DRAMSim2
dramsim3_dir    := $(BP_EXTERNAL_DIR)/DRAMsim3
cmurphi_dir     := $(BP_EXTERNAL_DIR)/cmurphi
zachjs_sv2v_dir := $(BP_EXTERNAL_DIR)/zachjs_sv2v
bsg_sv2v_dir    := $(BP_EXTERNAL_DIR)/bsg_sv2v

define submodule_tool_template
$(1)_tag := $(addprefix $(1)., $(shell cd $(2); git rev-parse HEAD))
$(BP_TOUCH_DIR)/$$($(1)_tag):
	rm -rf $(BP_TOUCH_DIR)/$(1).*
	cd $(TOP); git submodule update --init --recursive $$($(1)_dir)
	+$(MAKE) $(1)_build
	touch $(BP_TOUCH_DIR)/$$($(1)_tag)
$(1): $(BP_TOUCH_DIR)/$$($(1)_tag)
$(1)_manual:
	+$(MAKE) $(1)_build
endef

basejump_build: ;

systemc_build:
	cd $(systemc_dir); \
		autoreconf; \
	   	./configure --prefix=$(BP_EXTERNAL_DIR) CXXFLAGS="-std=c++11"
	$(MAKE) -C $(systemc_dir)
	$(MAKE) -C $(systemc_dir) install

verilator_build: systemc
	cd $(verilator_dir); \
		autoconf; \
		./configure --prefix=$(BP_EXTERNAL_DIR)
	$(MAKE) -C $(verilator_dir)
	$(MAKE) -C $(verilator_dir) install

gnu_build:
	cd $(gnu_dir); \
		./configure --prefix=$(BP_EXTERNAL_DIR) --with-arch=rv64ima --with-abi=lp64 --with-cmodel=medany 
	$(MAKE) -C $(gnu_dir)
	$(MAKE) -C $(gnu_dir) install
	-cp $(BP_EXTERNAL_DIR)/riscv64-unknown-elf-dramfs/bin/dramfs_mklfs $(BP_BIN_DIR)

dtc_build:
	$(MAKE) -j1 -C $(dtc_dir) install
	cp $(dtc_dir)/dtc $(BP_BIN_DIR)

spike_build: dtc
	rm -rf $(BP_TOUCH_DIR)/spike.*
	cd $(spike_dir); \
		./configure --enable-commitlog --enable-histogram --with-isa=rv64ima --prefix=$(BP_EXTERNAL_DIR)
	$(MAKE) -C $(spike_dir)
	$(MAKE) -C $(spike_dir) install

dromajo_build:
	$(MAKE) -C $(dromajo_dir)/src
	cp $(dromajo_dir)/src/dromajo $(BP_BIN_DIR)
	cp $(dromajo_dir)/src/libdromajo_cosim.a $(BP_LIB_DIR)
	cp $(dromajo_dir)/src/dromajo_cosim.h $(BP_INCLUDE_DIR)

axe_build:
	cd $(axe_dir)/src; \
		./make.sh
	cp $(axe_dir)/src/axe $(BP_BIN_DIR)

dramsim2_build:
	$(MAKE) -C $(dramsim2_dir) libdramsim.so
	cp $(dramsim2_dir)/libdramsim.so $(BP_LIB_DIR) 
	cp $(dramsim2_dir)/*.h $(BP_INCLUDE_DIR)

dramsim3_build:
	$(MAKE) -C $(dramsim3_dir) libdramsim3.so
	cp $(dramsim3_dir)/libdramsim3.so $(BP_LIB_DIR)
	cp $(dramsim3_dir)/src/*.h $(BP_INCLUDE_DIR)

cmurphi_build:
	$(MAKE) -C $(cmurphi_dir)/src/ mu
	cp $(cmurphi_dir)/src/mu $(BP_BIN_DIR)

stack:
	wget -qO- https://get.haskellstack.org/stable/linux-x86_64-static.tar.gz | tar xz
	cp stack*/stack $(BP_BIN_DIR)
	rm -rf stack*

zachjs_sv2v_build: stack
	$(MAKE) -C $(zachjs_sv2v_dir)
	cp $(zachjs_sv2v_dir)/bin/sv2v $(BP_BIN_DIR)

bsg_sv2v_build:
	$(MAKE) -j1 -C $(bsg_sv2v_dir) tools

$(eval $(call submodule_tool_template,basejump,$(basejump_dir)))
$(eval $(call submodule_tool_template,systemc,$(systemc_dir)))
$(eval $(call submodule_tool_template,verilator,$(verilator_dir)))
$(eval $(call submodule_tool_template,gnu,$(gnu_dir)))
$(eval $(call submodule_tool_template,dtc,$(dtc_dir)))
$(eval $(call submodule_tool_template,spike,$(spike_dir)))
$(eval $(call submodule_tool_template,dromajo,$(dromajo_dir)))
$(eval $(call submodule_tool_template,axe,$(axe_dir)))
$(eval $(call submodule_tool_template,dramsim2,$(dramsim2_dir)))
$(eval $(call submodule_tool_template,dramsim3,$(dramsim3_dir)))
$(eval $(call submodule_tool_template,cmurphi,$(cmurphi_dir)))
$(eval $(call submodule_tool_template,zachjs_sv2v,$(zachjs_sv2v_dir)))
$(eval $(call submodule_tool_template,bsg_sv2v,$(bsg_sv2v_dir)))


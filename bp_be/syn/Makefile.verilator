## Top level source directory should include 
# bp_top, bp_fe, bp_be, bp_me, bp_common, bsg_ip_cores, verilator, systemc
TOP            = $(CURDIR)/../..
BP_TOP_PATH	   = $(TOP)/bp_top
BP_FE_PATH	   = $(TOP)/bp_fe
BP_BE_PATH	   = $(TOP)/bp_be
BP_ME_PATH 	   = $(TOP)/bp_me
BP_COMMON_PATH = $(TOP)/bp_common

CAD_PATH       = $(TOP)/cad
CADENV_PATH    = $(TOP)/bsg_cadenv
BSG_IP_PATH	   = $(TOP)/bsg_ip_cores
VERILATOR_PATH = $(TOP)/verilator
SYSTEMC_PATH   = $(TOP)/systemc

SRC_PATH	= $(BP_BE_PATH)/v
TB_PATH		= $(BP_BE_PATH)/tb
SYN_PATH	= $(BP_BE_PATH)/syn

VTB_PATH    = $(TB_PATH)/v
SCTB_PATH   = $(TB_PATH)/sc

## Tools
VV = verilator
CC = g++

VV_OPTS +=-I$(SRC_PATH) -I$(TB_PATH)/common -I$(BP_COMMON_PATH) 
VV_OPTS +=-I$(BP_BE_PATH)/bp_dcache/include -I$(BP_BE_PATH)/bp_dcache/v
VV_OPTS +=-I$(BP_BE_PATH)/bp_dcache/testing/v
VV_OPTS +=-I$(TB_PATH)/rom
VV_OPTS +=-I$(BP_ME_PATH)/v/cce -I$(BP_ME_PATH)/test/common -I$(BP_ME_PATH)/include/v
VV_OPTS +=-I$(BP_ME_PATH)/v/network -I$(BP_ME_PATH)/v/roms
VV_OPTS +=-I$(BSG_IP_PATH)/bsg_dataflow -I$(BSG_IP_PATH)/bsg_mem -I$(BSG_IP_PATH)/bsg_noc
VV_OPTS +=-I$(BSG_IP_PATH)/bsg_misc -I$(BSG_IP_PATH)/bsg_test
VV_OPTS +=--trace -O3
VV_OPTS +=-Wno-unoptflat # Verilator has problems with false positive combinatorial
						 #   loop detection e.g. bit 0 drives bit 1 of struct
VV_OPTS +=-Wno-lint

CC_OPTS +=-I$(VERILATOR_PATH)/include 
CC_OPTS +=-I$(SYSTEMC_PATH)/include -L$(SYSTEMC_PATH)/lib-linux64 -lm -lsystemc

TEST_ROM  ?= bp_be_example_rom.v
LOAD_ROM  ?= bp_be_boot_rom.v

TEST_ROM_C  = $(notdir $(TEST_ROM))
LOAD_ROM_C  = $(notdir $(LOAD_ROM))

## Find sources
	
## Export variables to subcommands
export

## Targets
lint.sc:
	$(VV) $(VV_OPTS) --lint-only $(HDL_SOURCE) --top-module bp_be_top

load_rom.sc: $(HDL_SOURCE)
	if [ "$(TEST_ROM_C)" != "$(LOAD_ROM_C)" ]; then						    \
		ln -sf $(TB_PATH)/rom/$(TEST_ROM_C) $(TB_PATH)/rom/$(LOAD_ROM_C);	\
	fi;

%.build.sc: clean load_rom.sc
	$(eval include $(SCTB_PATH)/$*/Makefile.frag)
	$(VV) $(VV_OPTS) --top-module $* --sc $(HDL_SOURCE) $(HDL_PARAMS) \
		--exe $(SCTB_PATH)/$*/test_bp.cpp 							  \
	&& make -C obj_dir -f V$*.mk  									  \
	&& cp obj_dir/V$* $(SCTB_PATH)/$*/simsc

%.run.sc: %.build.sc
	$(eval include $(SCTB_PATH)/$*/Makefile.frag)
	$(SCTB_PATH)/$*/simsc $(HDL_PARAMS) > $(SCTB_PATH)/$*/simout.txt



// auto-generated by bsg_ascii_to_rom.py from /home/petrisko/bitbucket/POSH/recovery/pre-alpha-release/bp_top/test/rom/rv64ui_p_auipc.tr; do not modify
module bp_trace_rom #(parameter width_p=-1, addr_width_p=-1)
(input  [addr_width_p-1:0] addr_i
,output logic [width_p-1:0]      data_o
);
always_comb case(addr_i)
                                 // # Send format: 		0001_pc(64 bit)_instruction(32 bit)
                                 // # Receive formats:
                                 // # Register write:	0010_0_rd(5 bit)_data(64 bit)
                                 // # Memory write:		0010_1_addr(64 bit)_data(64 bit)
                                 // # check r10 == 0x0000000080002128
         0: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000010000000000000000010000100101000); // 0x04000000000000000A0000000080002128
                                 // # check r10 == 0x0000000080002844
         1: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000010000000000000000010100001000100); // 0x04000000000000000A0000000080002844
                                 // # check r11 == 0x0000000080000134
         2: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01011_0000000000000000000000000000000010000000000000000000000100110100); // 0x04000000000000000B0000000080000134
                                 // # check r10 == 0x0000000000002710
         3: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000000000000000000000010011100010000); // 0x04000000000000000A0000000000002710
                                 // # check r29 == 0x0000000000002000
         4: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11101_0000000000000000000000000000000000000000000000000010000000000000); // 0x04000000000000001D0000000000002000
                                 // # check r29 == 0x0000000000002710
         5: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11101_0000000000000000000000000000000000000000000000000010011100010000); // 0x04000000000000001D0000000000002710
                                 // # check r28 == 0x0000000000000002
         6: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11100_0000000000000000000000000000000000000000000000000000000000000010); // 0x04000000000000001C0000000000000002
                                 // # check r10 == 0x000000007fffe148
         7: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000001111111111111111110000101001000); // 0x04000000000000000A000000007FFFE148
                                 // # check r10 == 0x000000007fffda44
         8: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000001111111111111111101101001000100); // 0x04000000000000000A000000007FFFDA44
                                 // # check r11 == 0x0000000080000154
         9: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01011_0000000000000000000000000000000010000000000000000000000101010100); // 0x04000000000000000B0000000080000154
                                 // # check r10 == 0xffffffffffffd8f0
        10: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_1111111111111111111111111111111111111111111111111101100011110000); // 0x04000000000000000AFFFFFFFFFFFFD8F0
                                 // # check r29 == 0xffffffffffffe000
        11: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11101_1111111111111111111111111111111111111111111111111110000000000000); // 0x04000000000000001DFFFFFFFFFFFFE000
                                 // # check r29 == 0xffffffffffffd8f0
        12: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11101_1111111111111111111111111111111111111111111111111101100011110000); // 0x04000000000000001DFFFFFFFFFFFFD8F0
                                 // # check r28 == 0x0000000000000003
        13: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11100_0000000000000000000000000000000000000000000000000000000000000011); // 0x04000000000000001C0000000000000003
                                 // # check r5 == 0x00000000000c0000
        14: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_00101_0000000000000000000000000000000000000000000011000000000000000000); // 0x04000000000000000500000000000C0000
                                 // # check r5 == 0x00000000000c00df
        15: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_00101_0000000000000000000000000000000000000000000011000000000011011111); // 0x04000000000000000500000000000C00DF
                                 // # check r5 == 0x00000000c00df000
        16: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_00101_0000000000000000000000000000000011000000000011011111000000000000); // 0x04000000000000000500000000C00DF000
                                 // # check r5 == 0x00000000c00dead0
        17: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_00101_0000000000000000000000000000000011000000000011011110101011010000); // 0x04000000000000000500000000C00DEAD0
                                 // # check r10 == 0x0000000000000003
        18: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000000000000000000000000000000000011); // 0x04000000000000000A0000000000000003
                                 // # check r11 == 0x0000000000010000
        19: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01011_0000000000000000000000000000000000000000000000010000000000000000); // 0x04000000000000000B0000000000010000
                                 // # check r11 == 0x000000000000ffff
        20: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01011_0000000000000000000000000000000000000000000000001111111111111111); // 0x04000000000000000B000000000000FFFF
                                 // # check r10 == 0x0000000000000003
        21: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_01010_0000000000000000000000000000000000000000000000000000000000000011); // 0x04000000000000000A0000000000000003
                                 // # check mem[0x00000000c00dead0] == 0x0000000000000003
        22: data_o = width_p ' (133'b0010_1_0000000000000000000000000000000011000000000011011110101011010000_0000000000000000000000000000000000000000000000000000000000000011); // 0x0500000000C00DEAD00000000000000003
                                 // # check r28 == 0x0000000000000001
        23: data_o = width_p ' (133'b0010_0_00000000000000000000000000000000000000000000000000000000000_11100_0000000000000000000000000000000000000000000000000000000000000001); // 0x04000000000000001C0000000000000001
                                 // # Done
        24: data_o = width_p ' (133'b0011_0_0000000000000000000000000000000000000000000000000000000000000000_0000000000000000000000000000000000000000000000000000000000000000); // 0x0600000000000000000000000000000000
   default: data_o = { width_p { 1'b0 } };
endcase
endmodule

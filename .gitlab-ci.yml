variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: none

stages:
  - prereq
  - check
  - test-short
  - test-medium
  - test-long
 
# Useless comment to trigger CI
#pass:
#  script:
#    - echo "Passing job 1"
#    - exit 0

#fail:
#  script:
#    - echo "Failing job 2"
#    - exit 1 

clean_all:
  when: manual
  stage: prereq
  tags:
    - bsg
  script:
      - git clean -fdx

bleach_all:
  when: manual
  stage: prereq
  tags:
    - bsg
  script:
    - git submodule deinit -f .
    - git clean -fdx

.job_template: &job_definition
  only:
    - master
    - dev
    - fe_dev
    - be_dev
    - me_dev
    - top_dev
    - sw_dev
  before_script:
    - echo "Forcefully updating submodules"
    - git submodule update --init --force
    - echo "Making CCE ucode"
    - make ucode > make_ucode.log
  artifacts:
    when: always
    paths:
      - "*.log"
      - "bp_fe/syn/reports/"
      - "bp_be/syn/reports/"
      - "bp_me/syn/reports/"
      - "bp_top/syn/reports/"
  cache: &global_cache
    key: $CI_COMMIT_REF_SLUG
    paths:
      - $CI_PROJECT_DIR/bp_common/test/mem
      - $CI_PROJECT_DIR/external/bin
      - $CI_PROJECT_DIR/external/lib
      - $CI_PROJECT_DIR/external/lib64
      - $CI_PROJECT_DIR/external/lib-linux64
      - $CI_PROJECT_DIR/external/include
      - $CI_PROJECT_DIR/external/share
      - $CI_PROJECT_DIR/external/touchfiles
    policy: pull-push

update-cache: &update-cache-manual
  when: manual
  stage: prereq
  tags:
    - bsg
  script:
    - git submodule deinit -f .
    - git submodule sync
    - make prep -j $CI_CORES > make_prep.log
    - make tidy_tools > make_tidy_tools.log
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - $CI_PROJECT_DIR/bp_common/test/mem
      - $CI_PROJECT_DIR/external/bin
      - $CI_PROJECT_DIR/external/lib
      - $CI_PROJECT_DIR/external/lib64
      - $CI_PROJECT_DIR/external/lib-linux64
      - $CI_PROJECT_DIR/external/include
      - $CI_PROJECT_DIR/external/share
      - $CI_PROJECT_DIR/external/touchfiles
    policy: push

update-cache-auto:
    <<: *update-cache-manual
    when: always
    only:
      changes:
        - .gitlab-ci.yml
        - Makefile
        - Makefile.common
        - bp_common/test/*
        - external/*

hotfix_job:
  only:
    - /^.*hotfix.*$/
  stage: check
  tags:
    - bsg
    - vcs
  script:
    - make -C bp_top/syn clean
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_softcore" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - wait
  cache:
    key: "dev"
    paths:
      - $CI_PROJECT_DIR/external/
    policy: pull
  artifacts:
    when: always
    paths:
      - "bp_top/syn/reports/"

check-design:
  <<: *job_definition
  stage: check
  tags:
    - dc
  script:
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_softcore" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "check_design.syn TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - wait
      
lint-verilator:
  <<: *job_definition
  stage: check
  tags:
    - verilator
  script:
    - $CI_PROJECT_DIR/ci/regress.sh lint.sc bp_top
 
me-regress-verilator:
  <<: *job_definition
  stage: test-short
  tags:
    - verilator
  script:
    - $CI_PROJECT_DIR/ci/regress.sh regress.me.sc bp_me
     
top-riscv-verilator:
  <<: *job_definition
  when: manual
  stage: test-short
  tags:
    - verilator
  script:
    - make -C bp_top/syn build.sc
    - $CI_PROJECT_DIR/ci/regress.sh regress_riscv.sc bp_top
 
top-coremark-verilator:
  <<: *job_definition
  when: manual
  stage: test-long
  tags:
    - verilator
  script:
    - make -C bp_top/syn build.sc
    - $CI_PROJECT_DIR/ci/regress.sh "sim.sc PROG=coremark" bp_top

# Disabled because it's too long running     
# TODO: Investigate why
top-beebs-verilator:
  <<: *job_definition
  when: manual
  stage: test-long
  tags:
    - verilator
  script:
    - make -C bp_top/syn build.sc
    - $CI_PROJECT_DIR/ci/regress.sh regress_beebs.sc bp_top

top-mc-verilator:
  <<: *job_definition
  when: manual
  stage: test-medium
  tags:
    - verilator
  script:
    - make -C bp_top/syn build.sc CFG=e_bp_single_core_cfg
    - make -C bp_top/syn build.sc CFG=e_bp_dual_core_cfg
    - make -C bp_top/syn build.sc CFG=e_bp_quad_core_cfg
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_1.sc CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_2.sc CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_4.sc CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_1.sc CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_2.sc CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_4.sc CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_1.sc CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_2.sc CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_4.sc CFG=e_bp_quad_core_cfg" bp_top &
    - wait

top-mc-verilator-ucode:
  <<: *job_definition
  when: manual
  stage: test-medium
  tags:
    - verilator
  script:
    - make -C bp_top/syn build.sc CFG=e_bp_single_core_ucode_cce_cfg
    - make -C bp_top/syn build.sc CFG=e_bp_dual_core_ucode_cce_cfg
    - make -C bp_top/syn build.sc CFG=e_bp_quad_core_ucode_cce_cfg
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_1.sc CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_2.sc CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_4.sc CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_1.sc CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_2.sc CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_4.sc CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_1.sc CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_2.sc CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_4.sc CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - wait

lint-vcs:
  <<: *job_definition
  stage: check
  tags:
    - vcs
  script:
    - $CI_PROJECT_DIR/ci/regress.sh "lint.v TB=bp_processor" bp_top
    - $CI_PROJECT_DIR/ci/regress.sh "lint.v TB=bp_softcore" bp_top

me-regress-vcs:
  <<: *job_definition
  stage: test-short
  tags:
    - vcs
  script:
    - $CI_PROJECT_DIR/ci/regress.sh regress.me.v bp_me

top-riscv-tests-vcs:
  <<: *job_definition
  stage: test-short
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor
    - make -C bp_top/syn build.v TB=bp_softcore
    - $CI_PROJECT_DIR/ci/regress.sh "regress_riscv.v TB=bp_processor" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "regress_riscv.v TB=bp_softcore" bp_top &
    - wait
      
top-coremark-vcs:
  <<: *job_definition
  stage: test-long
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor
    - make -C bp_top/syn build.v TB=bp_softcore
    - $CI_PROJECT_DIR/ci/regress.sh "sim.v TB=bp_processor PROG=coremark" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "sim.v TB=bp_softcore PROG=coremark" bp_top &
    - wait

top-riscvdv-vcs:
  <<: *job_definition
  when: manual
  stage: test-medium
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor
    - make -C bp_top/syn build.v TB=bp_softcore
    - $CI_PROJECT_DIR/ci/regress.sh "regress_dv.v TB=bp_processor" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "regress_dv.v TB=bp_softcore" bp_top &
    - wait

top-beebs-vcs:
  <<: *job_definition
  stage: test-long
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor
    - make -C bp_top/syn build.v TB=bp_softcore
    - $CI_PROJECT_DIR/ci/regress.sh "regress_beebs.v TB=bp_processor" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "regress_beebs.v TB=bp_softcore" bp_top &
    - wait

top-cache-vcs:
  <<: *job_definition
  stage: test-medium
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor
    - make -C bp_top/syn build.v TB=softcore
    - $CI_PROJECT_DIR/ci/regress.sh "sim.v TB=bp_processor PROG=cache_hammer" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "sim.v TB=bp_softcore PROG=cache_hammer" bp_top &
    - wait

top-mc-vcs:
  <<: *job_definition
  stage: test-medium
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_single_core_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_dual_core_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_quad_core_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_oct_core_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_sexta_core_cfg
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_1.v TB=bp_processor CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_2.v TB=bp_processor CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_4.v TB=bp_processor CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_8.v TB=bp_processor CFG=e_bp_oct_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_16.v TB=bp_processor CFG=e_bp_sexta_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_1.v TB=bp_processor CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_2.v TB=bp_processor CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_4.v TB=bp_processor CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_8.v TB=bp_processor CFG=e_bp_oct_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_16.v TB=bp_processor CFG=e_bp_sexta_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_1.v TB=bp_processor CFG=e_bp_single_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_2.v TB=bp_processor CFG=e_bp_dual_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_4.v TB=bp_processor CFG=e_bp_quad_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_8.v TB=bp_processor CFG=e_bp_oct_core_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_16.v TB=bp_processor CFG=e_bp_sexta_core_cfg" bp_top &
    - wait

top-mc-vcs-ucode:
  <<: *job_definition
  stage: test-medium
  tags:
    - vcs
  script:
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_dual_core_ucode_cce_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_oct_core_ucode_cce_cfg
    - make -C bp_top/syn build.v TB=bp_processor CFG=e_bp_sexta_core_ucode_cce_cfg
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_1.v TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_2.v TB=bp_processor CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_4.v TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_8.v TB=bp_processor CFG=e_bp_oct_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_sanity_16.v TB=bp_processor CFG=e_bp_sexta_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_1.v TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_2.v TB=bp_processor CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_4.v TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_8.v TB=bp_processor CFG=e_bp_oct_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_rand_walk_16.v TB=bp_processor CFG=e_bp_sexta_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_1.v TB=bp_processor CFG=e_bp_single_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_2.v TB=bp_processor CFG=e_bp_dual_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_4.v TB=bp_processor CFG=e_bp_quad_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_8.v TB=bp_processor CFG=e_bp_oct_core_ucode_cce_cfg" bp_top &
    - $CI_PROJECT_DIR/ci/regress.sh "mc_work_share_sort_16.v TB=bp_processor CFG=e_bp_sexta_core_ucode_cce_cfg" bp_top &
    - wait

